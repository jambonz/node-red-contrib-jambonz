[{
	"id": "42f30934.431ba8",
	"type": "comment",
	"z": "b384a464.d2b5f8",
	"name": "Handling device authentication",
	"info": "# Authenticating sip devices\n\n## TL;DR\nLook up the sip password associated with the username and realm, then \nuse the `user auth` node to to authenticate the request\n\nThis example flow just pulls the password from an in-memory database, but you\nwould typically store them in an external database.  You can store your passwords\nin either plaintext or hashed form.\n\n## Overview\njambonz uses digest authentication to challenge sip requests from devices.\n\nWhen a sip device attempts to register with a username and sip realm, \nthe sip realm is used to identify the jambonz account, if any, associated with that sip realm.\nIf an account is found, then the associated webhook is called.\nThe webhook is passed all of the data from the SIP Authorization header, \nand it is the responsibility of the webhook to return JSON\ncontent indicating whether the request has been authenticated.\n\n## msg.authRequest\n\nThe webhook payload for an authentication request will be \navailble in `msg.authRequest`, e.g:\n\n```\n{\n  method: \"REGISTER\"\n  expires: 3600\n  scheme: \"digest\"\n  username: \"daveh\"\n  realm: \"jambonz.us\"\n  nonce: \"159425701999900\"\n  uri: \"sip:jambonz.us\"\n  response: \"674bf386682f799cf1debdbd707212bf\"\n  qop: \"auth\"\n  nc: \"00000001\"\n  cnonce: \"e4ae942e232fbc7826c0093b4020616a\"\n  algorithm: \"MD5\"\n}\n```\n\nIt is the responsibility of the application to look\nup the associated password and perform digest aauthentication\nto generate a response and see if it matches the response provided.\n\nThis is made easy by the `user auth` node: once the password\nhas been retrieved, it can be provided to the `user auth` node\nas an input, and the node will perform digest authentication\nand create the necessary `msg.authResponse` object.\n\n## msg.authResponse\n\nThe `webhook out` sends back JSON content from msg.authResponse \nwhich will look like this for a successful authentication:\n\n```\n{status: \"ok\"}\n```\n\nor this, for a faile response\n```\n{status: \"fail\", msg: \"incorrect password\"}\n```",
	"x": 150,
	"y": 40,
	"wires": []
}]